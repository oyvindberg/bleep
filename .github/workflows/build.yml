name: Build
on:
  push:
    tags: [ 'v*' ]
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.0.0.2'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: coursier/setup-action@v1
        with:
          apps: sbt
      - uses: coursier/cache-action@v6
      - name: Scalafmt Check
        if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        run: sbt --client scalafmtCheckAll
      - name: "Test"
        shell: bash
        run: sbt --client "test"
      - name: "Assembly"
        shell: bash
        run: sbt --client "bleep/assembly"
      - name: Temporarily save package
        uses: actions/upload-artifact@v2
        with:
          name: java-binary
          path: |
            ${{ github.workspace }}/bleep/target/jvm-2.13/bleep-assembly.jar
          retention-days: 1
      - name: Cleanup before cache
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

  build-native-image:
    name: Native image build on ${{ matrix.os }}
    needs: [ build ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            file_name: bleep-linux
            artifact_name: linux-binary
          - os: macos-latest
            file_name: bleep-macos
            artifact_name: macos-binary
          - os: windows-latest
            file_name: bleep-windows
            artifact_name: windows-binary
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Download application package
        uses: actions/download-artifact@v2
        with:
          name: java-binary
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.0.0.2'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image on Linux
        run: mkdir dist && native-image --enable-url-protocols=https -jar bleep-*.jar dist/${{ matrix.file_name }} && chmod 755 dist/${{ matrix.file_name }}
        if: runner.os == 'Linux'

      - name: Build native image on Mac OS X
        run: mkdir dist && native-image --enable-url-protocols=https -jar bleep-*.jar dist/${{ matrix.file_name }} && chmod 755 dist/${{ matrix.file_name }}
        if: runner.os == 'macOS'

      - name: Build native image on Windows
        run: >-
          mkdir dist && "C:\Program Files (x86)\Microsoft Visual
          Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && native-image --enable-url-protocols=https -jar bleep-*.jar dist/${{ matrix.file_name }}
        if: runner.os == 'Windows'

      - name: Test binary after build on Windows
        shell: cmd
        run: .\dist\${{ matrix.file_name }}.exe compile --no-color
        if: runner.os == 'Windows'

      - name: Test binary after build on Linux
        run: |
          chmod 755 dist/${{ matrix.file_name }} 
          ./dist/${{ matrix.file_name }} compile --no-color
        if: runner.os == 'Linux'

      - name: Test binary after build on Macos
        run: |
          chmod 755 dist/${{ matrix.file_name }}
          ./dist/${{ matrix.file_name }} compile --no-color
        if: runner.os == 'macOS'

      - name: Temporarily save package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            dist/bleep-*
          retention-days: 1

  release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [build-native-image]
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - uses: actions/checkout@v2
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: find artifacts
      - name: Release
        run: ./artifacts/linux-binary/bleep-linux publish
      - name: Prepare files
        run: |
          export VERSION=${{ steps.get_version.outputs.version-without-v }}
          bash .github/prepare-release.sh
      - name: Upload-to-release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ steps.get_version.outputs.version-without-v }}"
          prerelease: true
          generate_release_notes: true
          files: |
            work/release/*
