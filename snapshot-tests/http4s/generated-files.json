{"http4s-core@js213":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"1.0-bc06627-SNAPSHOT\". */\n  val version: String = \"1.0-bc06627-SNAPSHOT\"\n  /** The value is \"2.13.8\". */\n  val scalaVersion: String = \"2.13.8\"\n  /** The value is (1 -> 0). */\n  val apiVersion = (1 -> 0)\n  override val toString: String = {\n    \"version: %s, scalaVersion: %s, apiVersion: %s\".format(\n      version, scalaVersion, apiVersion\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-core-test@jvm3":[{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass MessageDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"Message.scala:134: putHeaders\") {\n    import cats.effect.IO\n\n    import org.http4s.headers.Accept\n\n    val req = Request[IO]().putHeaders(Accept(MediaRange.`application/*`))\n\n    //example at line 142: req.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*)))\")\n\n    val req2 = req.putHeaders(Accept(MediaRange.`text/*`))\n\n    //example at line 146: req2.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req2.headers.get[Accept]), \"Some(Accept(NonEmptyList(text/*)))\")\n  }\n\n  test(\"Message.scala:154: addHeader\") {\n    import cats.effect.IO\n\n    import org.http4s.headers.Accept\n\n    val req = Request[IO]().addHeader(Accept(MediaRange.`application/*`))\n\n    //example at line 163: req.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*)))\")\n\n    val req2 = req.addHeader(Accept(MediaRange.`text/*`))\n\n    //example at line 167: req2.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req2.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*, text/*)))\")\n  }\n\n}\n","toRelPath":"./org/http4s/MessageDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass FormDataDecoderDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"FormDataDecoder.scala:26: FormDataDecoder\") {\n    import cats.syntax.all._\n\n    import cats.data._\n\n    import org.http4s.FormDataDecoder._\n\n    import org.http4s.ParseFailure\n\n    case class Foo(a: String, b: Boolean)\n\n    case class Bar(fs: List[Foo], f: Foo, d: Boolean)\n\n    implicit val fooMapper: FormDataDecoder[Foo] = (\n      field[String](\"a\"),\n      field[Boolean](\"b\")\n    ).mapN(Foo.apply)\n\n    val barMapper = (\n      list[Foo](\"fs\"),\n      nested[Foo](\"f\"),\n      field[Boolean](\"d\")\n    ).mapN(Bar.apply)\n\n    //example at line 48: barMapper( ...\n    sbtDoctestTypeEquals(barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n))((barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n)): ValidatedNel[ParseFailure, Bar])\n      assertEquals(sbtDoctestReplString(barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n)), \"Valid(Bar(List(Foo(a1,true), Foo(a2,false)),Foo(fa,false),true))\")\n  }\n\n}\n","toRelPath":"./org/http4s/FormDataDecoderDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass HttpVersionDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"HttpVersion.scala:51: render\") {\n    //example at line 54: HttpVersion.`HTTP/1.1`.renderString\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.`HTTP/1.1`.renderString), \"HTTP/1.1\")\n  }\n\n  test(\"HttpVersion.scala:60: compare\") {\n    //example at line 63: List(HttpVersion.`HTTP/1.0`, HttpVersion.`HTTP/1.1`, HttpVer ...\n    \n      assertEquals(sbtDoctestReplString(List(HttpVersion.`HTTP/1.0`, HttpVersion.`HTTP/1.1`, HttpVersion.`HTTP/0.9`).sorted), \"List(HTTP/0.9, HTTP/1.0, HTTP/1.1)\")\n  }\n\n  test(\"HttpVersion.scala:159: fromString\") {\n    //example at line 162: HttpVersion.fromString(\\\"HTTP/1.1\\\")\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromString(\"HTTP/1.1\")), \"Right(HTTP/1.1)\")\n  }\n\n  test(\"HttpVersion.scala:184: fromVersion\") {\n    //example at line 187: HttpVersion.fromVersion(1, 1)\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromVersion(1, 1)), \"Right(HTTP/1.1)\")\n\n    //example at line 190: HttpVersion.fromVersion(1, 10)\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromVersion(1, 10)), \"Left(org.http4s.ParseFailure: Invalid HTTP version: major must be <= 9: 10)\")\n  }\n\n}\n","toRelPath":"./org/http4s/HttpVersionDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass QueryOpsDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"QueryOps.scala:56: ++?\") {\n    import org.http4s.implicits._\n\n    //example at line 60: uri\\\"www.scala.com\\\".++?(\\\"key\\\" -> List(\\\"value1\\\", \\\"value2\\\", \\\"va ...\n    sbtDoctestTypeEquals(uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\")))((uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\"))): Uri)\n      assertEquals(sbtDoctestReplString(uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\"))), \"www.scala.com?key=value1&key=value2&key=value3\")\n  }\n\n}\n","toRelPath":"./org/http4s/QueryOpsDoctest.scala"}],"http4s-server-test@js3":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s.server.test\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/js/src/test/resources\". */\n  val test_resourceDirectory = \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/js/src/test/resources\"\n  override val toString: String = {\n    \"test_resourceDirectory: %s\".format(\n      test_resourceDirectory\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-dsl-test@jvm3":[{"isResource":false,"contents":"package org.http4s.dsl\n\nimport _root_.munit._\n\nclass andDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"and.scala:19: &\") {\n    import org.http4s.dsl.&\n\n    object Even { def unapply(i: Int) = (i % 2) == 0 }\n\n    object Positive { def unapply(i: Int) = i > 0 }\n\n    def describe(i: Int) = i match {\n      case Even() & Positive() => \"even and positive\"\n      case Even() => \"even but not positive\"\n      case Positive() => \"positive but not even\"\n      case _ => \"neither even nor positive\"\n    }\n\n    //example at line 31: describe(-1)\n    sbtDoctestTypeEquals(describe(-1))((describe(-1)): String)\n      assertEquals(sbtDoctestReplString(describe(-1)), \"neither even nor positive\")\n\n    //example at line 33: describe(0)\n    sbtDoctestTypeEquals(describe(0))((describe(0)): String)\n      assertEquals(sbtDoctestReplString(describe(0)), \"even but not positive\")\n\n    //example at line 35: describe(1)\n    sbtDoctestTypeEquals(describe(1))((describe(1)): String)\n      assertEquals(sbtDoctestReplString(describe(1)), \"positive but not even\")\n\n    //example at line 37: describe(2)\n    sbtDoctestTypeEquals(describe(2))((describe(2)): String)\n      assertEquals(sbtDoctestReplString(describe(2)), \"even and positive\")\n  }\n\n}\n","toRelPath":"./org/http4s/dsl/andDoctest.scala"}],"http4s-core@jvm3":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"1.0-bc06627-SNAPSHOT\". */\n  val version: String = \"1.0-bc06627-SNAPSHOT\"\n  /** The value is \"3.1.1\". */\n  val scalaVersion: String = \"3.1.1\"\n  /** The value is (1 -> 0). */\n  val apiVersion = (1 -> 0)\n  override val toString: String = {\n    \"version: %s, scalaVersion: %s, apiVersion: %s\".format(\n      version, scalaVersion, apiVersion\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-core-test@jvm213":[{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass MessageDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"Message.scala:134: putHeaders\") {\n    import cats.effect.IO\n\n    import org.http4s.headers.Accept\n\n    val req = Request[IO]().putHeaders(Accept(MediaRange.`application/*`))\n\n    //example at line 142: req.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*)))\")\n\n    val req2 = req.putHeaders(Accept(MediaRange.`text/*`))\n\n    //example at line 146: req2.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req2.headers.get[Accept]), \"Some(Accept(NonEmptyList(text/*)))\")\n  }\n\n  test(\"Message.scala:154: addHeader\") {\n    import cats.effect.IO\n\n    import org.http4s.headers.Accept\n\n    val req = Request[IO]().addHeader(Accept(MediaRange.`application/*`))\n\n    //example at line 163: req.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*)))\")\n\n    val req2 = req.addHeader(Accept(MediaRange.`text/*`))\n\n    //example at line 167: req2.headers.get[Accept]\n    \n      assertEquals(sbtDoctestReplString(req2.headers.get[Accept]), \"Some(Accept(NonEmptyList(application/*, text/*)))\")\n  }\n\n}\n","toRelPath":"./org/http4s/MessageDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass FormDataDecoderDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"FormDataDecoder.scala:26: FormDataDecoder\") {\n    import cats.syntax.all._\n\n    import cats.data._\n\n    import org.http4s.FormDataDecoder._\n\n    import org.http4s.ParseFailure\n\n    case class Foo(a: String, b: Boolean)\n\n    case class Bar(fs: List[Foo], f: Foo, d: Boolean)\n\n    implicit val fooMapper: FormDataDecoder[Foo] = (\n      field[String](\"a\"),\n      field[Boolean](\"b\")\n    ).mapN(Foo.apply)\n\n    val barMapper = (\n      list[Foo](\"fs\"),\n      nested[Foo](\"f\"),\n      field[Boolean](\"d\")\n    ).mapN(Bar.apply)\n\n    //example at line 48: barMapper( ...\n    sbtDoctestTypeEquals(barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n))((barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n)): ValidatedNel[ParseFailure, Bar])\n      assertEquals(sbtDoctestReplString(barMapper(\n  Map(\n   \"fs[].a\" -> Chain(\"a1\", \"a2\"),\n   \"fs[].b\" -> Chain(\"true\", \"false\"),\n   \"f.a\" -> Chain(\"fa\"),\n   \"f.b\" -> Chain(\"false\"),\n   \"d\" -> Chain(\"true\"))\n)), \"Valid(Bar(List(Foo(a1,true), Foo(a2,false)),Foo(fa,false),true))\")\n  }\n\n}\n","toRelPath":"./org/http4s/FormDataDecoderDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass HttpVersionDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"HttpVersion.scala:51: render\") {\n    //example at line 54: HttpVersion.`HTTP/1.1`.renderString\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.`HTTP/1.1`.renderString), \"HTTP/1.1\")\n  }\n\n  test(\"HttpVersion.scala:60: compare\") {\n    //example at line 63: List(HttpVersion.`HTTP/1.0`, HttpVersion.`HTTP/1.1`, HttpVer ...\n    \n      assertEquals(sbtDoctestReplString(List(HttpVersion.`HTTP/1.0`, HttpVersion.`HTTP/1.1`, HttpVersion.`HTTP/0.9`).sorted), \"List(HTTP/0.9, HTTP/1.0, HTTP/1.1)\")\n  }\n\n  test(\"HttpVersion.scala:159: fromString\") {\n    //example at line 162: HttpVersion.fromString(\\\"HTTP/1.1\\\")\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromString(\"HTTP/1.1\")), \"Right(HTTP/1.1)\")\n  }\n\n  test(\"HttpVersion.scala:184: fromVersion\") {\n    //example at line 187: HttpVersion.fromVersion(1, 1)\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromVersion(1, 1)), \"Right(HTTP/1.1)\")\n\n    //example at line 190: HttpVersion.fromVersion(1, 10)\n    \n      assertEquals(sbtDoctestReplString(HttpVersion.fromVersion(1, 10)), \"Left(org.http4s.ParseFailure: Invalid HTTP version: major must be <= 9: 10)\")\n  }\n\n}\n","toRelPath":"./org/http4s/HttpVersionDoctest.scala"},{"isResource":false,"contents":"package org.http4s\n\nimport _root_.munit._\n\nclass QueryOpsDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"QueryOps.scala:56: ++?\") {\n    import org.http4s.implicits._\n\n    //example at line 60: uri\\\"www.scala.com\\\".++?(\\\"key\\\" -> List(\\\"value1\\\", \\\"value2\\\", \\\"va ...\n    sbtDoctestTypeEquals(uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\")))((uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\"))): Uri)\n      assertEquals(sbtDoctestReplString(uri\"www.scala.com\".++?(\"key\" -> List(\"value1\", \"value2\", \"value3\"))), \"www.scala.com?key=value1&key=value2&key=value3\")\n  }\n\n}\n","toRelPath":"./org/http4s/QueryOpsDoctest.scala"}],"scalafixinternaltests-test@jvm3":[{"isResource":true,"contents":"#Input data for scalafix testkit\n#Wed Jul 27 01:48:25 CEST 2022\ninputClasspath=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/target/scala-3.1.1/classes\\:/Users/oyvind/bleep/snapshot-tests-in/http4s/core/jvm/target/scala-3.1.1/classes\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.1.1/scala3-library_3-3.1.1.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/case-insensitive_3/1.2.0/case-insensitive_3-1.2.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-core_3/2.7.0/cats-core_3-2.7.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect-std_3/3.3.6/cats-effect-std_3-3.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-parse_3/0.3.6/cats-parse_3-0.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/http4s/http4s-crypto_3/0.2.2/http4s-crypto_3-0.2.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/co/fs2/fs2-core_3/3.2.5/fs2-core_3-3.2.5.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/co/fs2/fs2-io_3/3.2.5/fs2-io_3-3.2.5.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/comcast/ip4s-core_3/3.1.2/ip4s-core_3-3.1.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/literally_3/1.0.2/literally_3-1.0.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/log4s/log4s_3/1.10.0/log4s_3-1.10.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scodec/scodec-bits_3/1.1.30/scodec-bits_3-1.1.30.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/vault_3/3.1.0/vault_3-3.1.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.6/scala-library-2.13.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-kernel_3/2.7.0/cats-kernel_3-2.7.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/simulacrum-scalafix-annotations_3/0.5.4/simulacrum-scalafix-annotations_3-0.5.4.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect-kernel_3/3.3.6/cats-effect-kernel_3-3.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect_3/3.3.5/cats-effect_3-3.3.5.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar\nsourceroot=/Users/oyvind/bleep/snapshot-tests-in/http4s\nscalacOptions=-deprecation|-encoding|UTF-8|-feature|-unchecked|-language\\:implicitConversions|-Ykind-projector|-source\\:3.0-migration|-Xsemanticdb|-semanticdb-target|/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/target/scala-3.1.1/meta\noutputSourceDirectories=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/output/src/main/scala\ninputSourceDirectories=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/src/main/scala\nscalaVersion=3.1.1\n","toRelPath":"./scalafix-testkit.properties"}],"http4s-twirl-test@jvm213":[{"isResource":false,"contents":"\npackage txt\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.TxtFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.TxtFormat.Appendable]](play.twirl.api.TxtFormat) with _root_.play.twirl.api.Template0[play.twirl.api.TxtFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.TxtFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"test text\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.TxtFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.TxtFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.txt\n                  HASH: 6afc05eae22e994f1c7dd48e58f8895dd9028223\n                  MATRIX: 394->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./txt/test.template.scala"},{"isResource":false,"contents":"\npackage js\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.JavaScriptFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.JavaScriptFormat.Appendable]](play.twirl.api.JavaScriptFormat) with _root_.play.twirl.api.Template0[play.twirl.api.JavaScriptFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.JavaScriptFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"\"test js\"\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.JavaScriptFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.JavaScriptFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.js\n                  HASH: b795ec10d4e55c2f3838de49ccc786ca9c41b137\n                  MATRIX: 428->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./js/test.template.scala"},{"isResource":false,"contents":"\npackage html\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.HtmlFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.HtmlFormat.Appendable]](play.twirl.api.HtmlFormat) with _root_.play.twirl.api.Template0[play.twirl.api.HtmlFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.HtmlFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"<h1>test html</h1>\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.HtmlFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.HtmlFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.html\n                  HASH: f7a2c5333a340176072e80634147b97b3be0cec8\n                  MATRIX: 400->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./html/test.template.scala"},{"isResource":false,"contents":"\npackage xml\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.XmlFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.XmlFormat.Appendable]](play.twirl.api.XmlFormat) with _root_.play.twirl.api.Template0[play.twirl.api.XmlFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.XmlFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"<test>test xml</test>\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.XmlFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.XmlFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.xml\n                  HASH: 14cbe0984ade53b19135408f5767afb302a843bb\n                  MATRIX: 394->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./xml/test.template.scala"}],"http4s-twirl-test@jvm3":[{"isResource":false,"contents":"\npackage txt\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.TxtFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.TxtFormat.Appendable]](play.twirl.api.TxtFormat) with _root_.play.twirl.api.Template0[play.twirl.api.TxtFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.TxtFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"test text\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.TxtFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.TxtFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.txt\n                  HASH: 6afc05eae22e994f1c7dd48e58f8895dd9028223\n                  MATRIX: 394->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./txt/test.template.scala"},{"isResource":false,"contents":"\npackage js\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.JavaScriptFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.JavaScriptFormat.Appendable]](play.twirl.api.JavaScriptFormat) with _root_.play.twirl.api.Template0[play.twirl.api.JavaScriptFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.JavaScriptFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"\"test js\"\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.JavaScriptFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.JavaScriptFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.js\n                  HASH: b795ec10d4e55c2f3838de49ccc786ca9c41b137\n                  MATRIX: 428->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./js/test.template.scala"},{"isResource":false,"contents":"\npackage html\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.HtmlFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.HtmlFormat.Appendable]](play.twirl.api.HtmlFormat) with _root_.play.twirl.api.Template0[play.twirl.api.HtmlFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.HtmlFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"<h1>test html</h1>\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.HtmlFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.HtmlFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.html\n                  HASH: f7a2c5333a340176072e80634147b97b3be0cec8\n                  MATRIX: 400->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./html/test.template.scala"},{"isResource":false,"contents":"\npackage xml\n\n\nobject test extends _root_.play.twirl.api.BaseScalaTemplate[play.twirl.api.XmlFormat.Appendable,_root_.play.twirl.api.Format[play.twirl.api.XmlFormat.Appendable]](play.twirl.api.XmlFormat) with _root_.play.twirl.api.Template0[play.twirl.api.XmlFormat.Appendable] {\n\n  /**/\n  def apply():play.twirl.api.XmlFormat.Appendable = {\n    _display_ {\n      {\n\n\nSeq[Any](format.raw/*1.1*/(\"\"\"<test>test xml</test>\"\"\"))\n      }\n    }\n  }\n\n  def render(): play.twirl.api.XmlFormat.Appendable = apply()\n\n  def f:(() => play.twirl.api.XmlFormat.Appendable) = () => apply()\n\n  def ref: this.type = this\n\n}\n\n\n              /*\n                  -- GENERATED --\n                  SOURCE: twirl/src/test/twirl/test.scala.xml\n                  HASH: 14cbe0984ade53b19135408f5767afb302a843bb\n                  MATRIX: 394->0\n                  LINES: 13->1\n                  -- GENERATED --\n              */\n          ","toRelPath":"./xml/test.template.scala"}],"http4s-server-test@jvm3":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s.server.test\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/jvm/src/test/resources\". */\n  val test_resourceDirectory = \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/jvm/src/test/resources\"\n  override val toString: String = {\n    \"test_resourceDirectory: %s\".format(\n      test_resourceDirectory\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-server-test@js213":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s.server.test\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/js/src/test/resources\". */\n  val test_resourceDirectory = \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/js/src/test/resources\"\n  override val toString: String = {\n    \"test_resourceDirectory: %s\".format(\n      test_resourceDirectory\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-dsl-test@jvm213":[{"isResource":false,"contents":"package org.http4s.dsl\n\nimport _root_.munit._\n\nclass andDoctest extends FunSuite {\n\n  def sbtDoctestTypeEquals[A](a1: => A)(a2: => A): _root_.scala.Unit = {\n    val _ = () => (a1, a2)\n  }\n  def sbtDoctestReplString(any: _root_.scala.Any): _root_.scala.Predef.String = {\n    val s = _root_.scala.runtime.ScalaRunTime.replStringOf(any, 1000).init\n    if (s.headOption == Some('\\n')) s.tail else s\n  }\n\n  test(\"and.scala:19: &\") {\n    import org.http4s.dsl.&\n\n    object Even { def unapply(i: Int) = (i % 2) == 0 }\n\n    object Positive { def unapply(i: Int) = i > 0 }\n\n    def describe(i: Int) = i match {\n      case Even() & Positive() => \"even and positive\"\n      case Even() => \"even but not positive\"\n      case Positive() => \"positive but not even\"\n      case _ => \"neither even nor positive\"\n    }\n\n    //example at line 31: describe(-1)\n    sbtDoctestTypeEquals(describe(-1))((describe(-1)): String)\n      assertEquals(sbtDoctestReplString(describe(-1)), \"neither even nor positive\")\n\n    //example at line 33: describe(0)\n    sbtDoctestTypeEquals(describe(0))((describe(0)): String)\n      assertEquals(sbtDoctestReplString(describe(0)), \"even but not positive\")\n\n    //example at line 35: describe(1)\n    sbtDoctestTypeEquals(describe(1))((describe(1)): String)\n      assertEquals(sbtDoctestReplString(describe(1)), \"positive but not even\")\n\n    //example at line 37: describe(2)\n    sbtDoctestTypeEquals(describe(2))((describe(2)): String)\n      assertEquals(sbtDoctestReplString(describe(2)), \"even and positive\")\n  }\n\n}\n","toRelPath":"./org/http4s/dsl/andDoctest.scala"}],"http4s-core@js3":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"1.0-bc06627-SNAPSHOT\". */\n  val version: String = \"1.0-bc06627-SNAPSHOT\"\n  /** The value is \"3.1.1\". */\n  val scalaVersion: String = \"3.1.1\"\n  /** The value is (1 -> 0). */\n  val apiVersion = (1 -> 0)\n  override val toString: String = {\n    \"version: %s, scalaVersion: %s, apiVersion: %s\".format(\n      version, scalaVersion, apiVersion\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"http4s-core@jvm213":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"1.0-bc06627-SNAPSHOT\". */\n  val version: String = \"1.0-bc06627-SNAPSHOT\"\n  /** The value is \"2.13.8\". */\n  val scalaVersion: String = \"2.13.8\"\n  /** The value is (1 -> 0). */\n  val apiVersion = (1 -> 0)\n  override val toString: String = {\n    \"version: %s, scalaVersion: %s, apiVersion: %s\".format(\n      version, scalaVersion, apiVersion\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}],"scalafixinternaltests-test@jvm213":[{"isResource":true,"contents":"#Input data for scalafix testkit\n#Wed Jul 27 01:47:35 CEST 2022\ninputClasspath=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/target/scala-2.13/classes\\:/Users/oyvind/bleep/snapshot-tests-in/http4s/core/jvm/target/scala-2.13/classes\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.8/scala-library-2.13.8.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/case-insensitive_2.13/1.2.0/case-insensitive_2.13-1.2.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-core_2.13/2.7.0/cats-core_2.13-2.7.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect-std_2.13/3.3.6/cats-effect-std_2.13-3.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-parse_2.13/0.3.6/cats-parse_2.13-0.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/http4s/http4s-crypto_2.13/0.2.2/http4s-crypto_2.13-0.2.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/co/fs2/fs2-core_2.13/3.2.5/fs2-core_2.13-3.2.5.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/co/fs2/fs2-io_2.13/3.2.5/fs2-io_2.13-3.2.5.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/comcast/ip4s-core_2.13/3.1.2/ip4s-core_2.13-3.1.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/literally_2.13/1.0.2/literally_2.13-1.0.2.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/log4s/log4s_2.13/1.10.0/log4s_2.13-1.10.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scodec/scodec-bits_2.13/1.1.30/scodec-bits_2.13-1.1.30.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/vault_2.13/3.1.0/vault_2.13-3.1.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-kernel_2.13/2.7.0/cats-kernel_2.13-2.7.0.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/simulacrum-scalafix-annotations_2.13/0.5.4/simulacrum-scalafix-annotations_2.13-0.5.4.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect-kernel_2.13/3.3.6/cats-effect-kernel_2.13-3.3.6.jar\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-effect_2.13/3.3.5/cats-effect_2.13-3.3.5.jar\nsourceroot=/Users/oyvind/bleep/snapshot-tests-in/http4s\nscalacOptions=-deprecation|-encoding|UTF-8|-feature|-unchecked|-Ywarn-numeric-widen|-Xlint\\:deprecation|-Wunused\\:nowarn|-Wdead-code|-Wextra-implicit|-Wnumeric-widen|-Wunused\\:implicits|-Wunused\\:explicits|-Wunused\\:imports|-Wunused\\:locals|-Wunused\\:params|-Wunused\\:patvars|-Wunused\\:privates|-Wvalue-discard|-Ywarn-dead-code|-Ybackend-parallelism|10|-language\\:_|-Xplugin\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/olegpy/better-monadic-for_2.13/0.3.1/better-monadic-for_2.13-0.3.1.jar|-Xplugin\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/kind-projector_2.13.8/0.13.2/kind-projector_2.13.8-0.13.2.jar|-Xplugin\\:/Users/oyvind/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalameta/semanticdb-scalac_2.13.8/4.4.32/semanticdb-scalac_2.13.8-4.4.32.jar|-P\\:semanticdb\\:synthetics\\:on|-Yrangepos|-P\\:semanticdb\\:targetroot\\:/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/target/scala-2.13/meta\noutputSourceDirectories=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/output/src/main/scala\ninputSourceDirectories=/Users/oyvind/bleep/snapshot-tests-in/http4s/scalafix-internal/input/src/main/scala\nscalaVersion=2.13.8\n","toRelPath":"./scalafix-testkit.properties"}],"http4s-server-test@jvm213":[{"isResource":false,"contents":"// $COVERAGE-OFF$\npackage org.http4s.server.test\n\n/** This object was generated by sbt-buildinfo. */\ncase object BuildInfo {\n  /** The value is \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/jvm/src/test/resources\". */\n  val test_resourceDirectory = \"/Users/oyvind/bleep/snapshot-tests-in/http4s/server/jvm/src/test/resources\"\n  override val toString: String = {\n    \"test_resourceDirectory: %s\".format(\n      test_resourceDirectory\n    )\n  }\n}\n// $COVERAGE-ON$\n","toRelPath":"./sbt-buildinfo/BuildInfo.scala"}]}