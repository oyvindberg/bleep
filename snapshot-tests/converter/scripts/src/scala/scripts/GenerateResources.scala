package scripts

import java.nio.file.Files

object GenerateResources extends App {
  bleep.bootstrap.forScript("GenerateResources") { started =>
    started.logger.error("This script is a placeholder! You'll need to replace the contents with code which actually generates the files you want")

    Vector(bleep.model.CrossProjectName(bleep.model.ProjectName("importer-portable"), None)).foreach { crossName =>
      val projectPaths = started.projectPaths(crossName)
      val to = projectPaths.generatedSourcesDir.resolve("sbt-buildinfo/BuildInfo.scala")
      started.logger.withContext(crossName).warn(s"Writing $to")
      val content = s"""|// $$COVERAGE-OFF$$
      |package org.scalablytyped.converter.internal
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildInfo {
      |  /** The value is "715edaf5665f34a85303213f77d752286cf43ed3". */
      |  val gitSha: String = "715edaf5665f34a85303213f77d752286cf43ed3"
      |  /** The value is "1.0.0-beta37+17-715edaf5-SNAPSHOT". */
      |  val version: String = "1.0.0-beta37+17-715edaf5-SNAPSHOT"
      |  override val toString: String = {
      |    "gitSha: %s, version: %s".format(
      |      gitSha, version
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
      Files.createDirectories(to.getParent)
      Files.writeString(to, content)
    }

  }
}
