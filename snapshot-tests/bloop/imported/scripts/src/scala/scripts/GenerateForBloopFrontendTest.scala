
package scripts

import bleep.{BleepCodegenScript, Commands, Started}

import java.nio.file.Files

object GenerateForBloopFrontendTest extends BleepCodegenScript("GenerateForBloopFrontendTest") {
  override def run(started: Started, commands: Commands, targets: List[Target], args: List[String]): Unit = {
    started.logger.error("This script is a placeholder! You'll need to replace the contents with code which actually generates the files you want")

    targets.foreach { target =>
      if (Set("bloop-frontend-test").contains(target.project.value)) {
        val to = target.sources.resolve("sbt-buildinfo/BuildTestInfo.scala")
        started.logger.withContext(target.project).warn(s"Writing $to")
        val content = s"""|// $$COVERAGE-OFF$$
      |package bloop.internal.build
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildTestInfo {
      |  /** The value is new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build/frontend/src/test/resources/source-generator.py"). */
      |  val sampleSourceGenerator: java.io.File = new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build/frontend/src/test/resources/source-generator.py")
      |  /** The value is scala.collection.immutable.Seq("<COURSIER>/https/repo1.maven.org/maven2/com/github/sbt/junit-interface/0.13.3/junit-interface-0.13.3.jar", "<COURSIER>/https/repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar", "<COURSIER>/https/repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"). */
      |  val junitTestJars: scala.collection.immutable.Seq[String] = scala.collection.immutable.Seq("<COURSIER>/https/repo1.maven.org/maven2/com/github/sbt/junit-interface/0.13.3/junit-interface-0.13.3.jar", "<COURSIER>/https/repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar", "<COURSIER>/https/repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar")
      |  /** The value is new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build/frontend/target/stable/bloop-coursier.json"). */
      |  val bloopCoursierJson: java.io.File = new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build/frontend/target/stable/bloop-coursier.json")
      |  /** The value is new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build"). */
      |  val baseDirectory: java.io.File = new java.io.File("<BLEEP_GIT>/snapshot-tests/bloop/sbt-build")
      |  override val toString: String = {
      |    "sampleSourceGenerator: %s, junitTestJars: %s, bloopCoursierJson: %s, baseDirectory: %s".format(
      |      sampleSourceGenerator, junitTestJars, bloopCoursierJson, baseDirectory
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
        Files.createDirectories(to.getParent)
        Files.writeString(to, content)
      }
    }

  }
}