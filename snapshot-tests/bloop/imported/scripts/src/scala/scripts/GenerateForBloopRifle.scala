
package scripts

import bleep.{BleepCodegenScript, Commands, Started}

import java.nio.file.Files

object GenerateForBloopRifle extends BleepCodegenScript("GenerateForBloopRifle") {
  override def run(started: Started, commands: Commands, targets: List[Target], args: List[String]): Unit = {
    started.logger.error("This script is a placeholder! You'll need to replace the contents with code which actually generates the files you want")

    targets.foreach { target =>
      if (Set("bloop-rifle").contains(target.project.value)) {
        val to = target.sources.resolve("sbt-buildinfo/BuildInfo.scala")
        started.logger.withContext(target.project).warn(s"Writing $to")
        val content = s"""|// $$COVERAGE-OFF$$
      |package bloop.rifle.internal
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildInfo {
      |  /** The value is "2.0.10-0-051ce0a1-20250622-0035-SNAPSHOT". */
      |  val version: String = "2.0.10-0-051ce0a1-20250622-0035-SNAPSHOT"
      |  /** The value is "2.12.20". */
      |  val scalaVersion: String = "2.12.20"
      |  /** The value is "2.1.1". */
      |  val bspVersion: String = "2.1.1"
      |  override val toString: String = {
      |    "version: %s, scalaVersion: %s, bspVersion: %s".format(
      |      version, scalaVersion, bspVersion
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
        Files.createDirectories(to.getParent)
        Files.writeString(to, content)
      }
    }

  }
}