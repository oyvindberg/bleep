
package scripts

import bleep.{BleepCodegenScript, Commands, Started}

import java.nio.file.Files

object GenerateForTests extends BleepCodegenScript("GenerateForTests") {
  override def run(started: Started, commands: Commands, targets: List[Target], args: List[String]): Unit = {
    started.logger.error("This script is a placeholder! You'll need to replace the contents with code which actually generates the files you want")

    targets.foreach { target =>
      if (Set("tests@js213", "tests@jvm213", "tests@native213").contains(target.project.value)) {
        val to = target.sources.resolve("sbt-buildinfo/BuildInfo.scala")
        started.logger.withContext(target.project).warn(s"Writing $to")
        val content = s"""|// $$COVERAGE-OFF$$
      |package scala.meta.tests
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildInfo {
      |  /** The value is "2.13.8". */
      |  val scalaVersion: String = "2.13.8"
      |  /** The value is "2.12.16". */
      |  val latestScala212Version: String = "2.12.16"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build". */
      |  val databaseSourcepath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.13/classes". */
      |  val commonJVMClassDirectory: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.13/classes"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.13/classes". */
      |  val databaseClasspath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.13/classes"
      |  /** The value is scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.13"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.13/src_managed/main")). */
      |  val integrationSourceDirectories: scala.collection.immutable.Seq[java.io.File] = scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.13"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.13/src_managed/main"))
      |  override val toString: String = {
      |    "scalaVersion: %s, latestScala212Version: %s, databaseSourcepath: %s, commonJVMClassDirectory: %s, databaseClasspath: %s, integrationSourceDirectories: %s".format(
      |      scalaVersion, latestScala212Version, databaseSourcepath, commonJVMClassDirectory, databaseClasspath, integrationSourceDirectories
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
        Files.createDirectories(to.getParent)
        Files.writeString(to, content)
      }
    }



    targets.foreach { target =>
      if (Set("tests@jvm211").contains(target.project.value)) {
        val to = target.sources.resolve("sbt-buildinfo/BuildInfo.scala")
        started.logger.withContext(target.project).warn(s"Writing $to")
        val content = s"""|// $$COVERAGE-OFF$$
      |package scala.meta.tests
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildInfo {
      |  /** The value is "2.11.12". */
      |  val scalaVersion: String = "2.11.12"
      |  /** The value is "2.12.16". */
      |  val latestScala212Version: String = "2.12.16"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build". */
      |  val databaseSourcepath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.11/classes". */
      |  val commonJVMClassDirectory: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.11/classes"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.11/classes". */
      |  val databaseClasspath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.11/classes"
      |  /** The value is scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.11"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.11/src_managed/main")). */
      |  val integrationSourceDirectories: scala.collection.immutable.Seq[java.io.File] = scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.11"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.11/src_managed/main"))
      |  override val toString: String = {
      |    "scalaVersion: %s, latestScala212Version: %s, databaseSourcepath: %s, commonJVMClassDirectory: %s, databaseClasspath: %s, integrationSourceDirectories: %s".format(
      |      scalaVersion, latestScala212Version, databaseSourcepath, commonJVMClassDirectory, databaseClasspath, integrationSourceDirectories
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
        Files.createDirectories(to.getParent)
        Files.writeString(to, content)
      }
    }



    targets.foreach { target =>
      if (Set("tests@js212", "tests@jvm212", "tests@native212").contains(target.project.value)) {
        val to = target.sources.resolve("sbt-buildinfo/BuildInfo.scala")
        started.logger.withContext(target.project).warn(s"Writing $to")
        val content = s"""|// $$COVERAGE-OFF$$
      |package scala.meta.tests
      |
      |/** This object was generated by sbt-buildinfo. */
      |case object BuildInfo {
      |  /** The value is "2.12.16". */
      |  val scalaVersion: String = "2.12.16"
      |  /** The value is "2.12.16". */
      |  val latestScala212Version: String = "2.12.16"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build". */
      |  val databaseSourcepath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.12/classes". */
      |  val commonJVMClassDirectory: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/scalameta/common/jvm/target/scala-2.12/classes"
      |  /** The value is "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.12/classes". */
      |  val databaseClasspath: String = "<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.12/classes"
      |  /** The value is scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.12"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.12/src_managed/main")). */
      |  val integrationSourceDirectories: scala.collection.immutable.Seq[java.io.File] = scala.collection.immutable.Seq(new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2.12"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/scala-2"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/java"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/src/main/protobuf"), new java.io.File("<BLEEP_GIT>/snapshot-tests/scalameta/sbt-build/semanticdb/integration/target/scala-2.12/src_managed/main"))
      |  override val toString: String = {
      |    "scalaVersion: %s, latestScala212Version: %s, databaseSourcepath: %s, commonJVMClassDirectory: %s, databaseClasspath: %s, integrationSourceDirectories: %s".format(
      |      scalaVersion, latestScala212Version, databaseSourcepath, commonJVMClassDirectory, databaseClasspath, integrationSourceDirectories
      |    )
      |  }
      |}
      |// $$COVERAGE-ON$$""".stripMargin
        Files.createDirectories(to.getParent)
        Files.writeString(to, content)
      }
    }

  }
}